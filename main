local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local players = game:GetService("Players")
local espEnabled = false
local speed = 0
local dragging = false
local highlightEnabled = false
local nameHighlightEnabled = false
local highlights = {}
local nameTags = {}
local highlights2 = {}
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local espEnabled1 = false
local highlights1 = {}
local espEnabled3 = false
local highlights3 = {}

local survivorsFolder
local killersFolder

local function clearNameTags()
	for _, tag in pairs(nameTags) do
		if tag then tag:Destroy() end
	end
	nameTags = {}
end

local function clearHighlights()
	for _, highlight in pairs(highlights) do
		if highlight then highlight:Destroy() end
	end
	highlights = {}
end

local function clearHighlights1()
	for _, highlight in pairs(highlights1) do
		if highlight then highlight:Destroy() end
	end
	highlights1 = {}
end

local function highlightInstances()
	clearHighlights1()
	local mapRoot = game.Workspace:FindFirstChild("Map")
	if mapRoot then
		local ingame = mapRoot:FindFirstChild("Ingame")
		if ingame then
			local map = ingame:FindFirstChild("Map")
			if map then
				for _, obj in pairs(map:GetChildren()) do
					if obj.Name == "Generator" then
						local instances = obj:FindFirstChild("Instances")
						if instances then
							local lastgen = instances:FindFirstChild("Generator")
							if lastgen and lastgen:IsA("Model") then
								local highlight = Instance.new("Highlight")
								highlight.Adornee = lastgen
								highlight.FillColor = Color3.fromRGB(255, 255, 0) -- ярко красный
								highlight.OutlineColor = Color3.new(1, 1, 1)   -- белый контур
								highlight.Parent = lastgen

								highlights1[lastgen] = highlight
							end
						end
					end
				end
			end
		end
	end
end

local function createHighlightsForWorkspaceKits()
	-- не вызываем clearHighlights здесь, вызывается снаружи

	for _, kit in pairs(Workspace:GetChildren()) do
		if kit.Name == "Medkit" then
			local function recurse(obj)
				for _, child in pairs(obj:GetChildren()) do
					if child:IsA("BasePart") then
						local h = Instance.new("Highlight")
						h.Adornee = child
						h.FillColor = Color3.fromRGB(163, 3, 255)
						h.OutlineColor = Color3.fromRGB(255, 255, 255)
						h.Parent = child
						table.insert(highlights3, h)
					else
						recurse(child)
					end
				end
			end
			recurse(kit)
		end
	end
end

local function getAllMedKits()
	local kits = {}
	local success, map1 = pcall(function() return Workspace:WaitForChild("Map",5) end)
	if not success or not map1 then return kits end
	local success2, ingame = pcall(function() return map1:WaitForChild("Ingame",5) end)
	if not success2 or not ingame then return kits end
	local success3, map2 = pcall(function() return ingame:WaitForChild("Map",5) end)
	if not success3 or not map2 then return kits end

	for _, obj in pairs(map2:GetChildren()) do
		if obj.Name == "Medkit" then
			table.insert(kits, obj)
		end
	end

	return kits
end

local function getAllBloxyColas()
	local colas = {}
	local success, map1 = pcall(function() return Workspace:WaitForChild("Map",5) end)
	if not success or not map1 then return colas end
	local success2, ingame = pcall(function() return map1:WaitForChild("Ingame",5) end)
	if not success2 or not ingame then return colas end
	local success3, map2 = pcall(function() return ingame:WaitForChild("Map",5) end)
	if not success3 or not map2 then return colas end

	for _, obj in pairs(map2:GetChildren()) do
		if obj.Name == "BloxyCola" then
			table.insert(colas, obj)
		end
	end

	return colas
end

local function clearHighlights2()
	for _, h in pairs(highlights2) do
		if h and h.Parent then
			h:Destroy()
		end
	end
	highlights2 = {}
end

local function clearHighlights3()
	for _, h in pairs(highlights3) do
		if h and h.Parent then
			h:Destroy()
		end
	end
	highlights3 = {}
end

local function createHighlightsForAll3()
	clearHighlights3()

	local kits = getAllMedKits()
	for _, kit in ipairs(kits) do
		local function recurse(obj)
			for _, child in pairs(obj:GetChildren()) do
				if child:IsA("BasePart") then
					local h = Instance.new("Highlight")
					h.Adornee = child
					h.FillColor = Color3.fromRGB(163, 3, 255)
					h.OutlineColor = Color3.fromRGB(255, 255, 255)
					h.Parent = child
					table.insert(highlights3, h)
				else
					recurse(child)
				end
			end
		end
		recurse(kit)
	end

	createHighlightsForWorkspaceKits()
end

local function toggleESP3(state)
	espEnabled3 = state
	if espEnabled3 then
		createHighlightsForAll3()
	else
		clearHighlights3()
	end
end

local function createHighlightsForWorkspaceColas()
	for _, cola in pairs(Workspace:GetChildren()) do
		if cola.Name == "BloxyCola" then
			local function recurse(obj)
				for _, child in pairs(obj:GetChildren()) do
					if child:IsA("BasePart") then
						local h = Instance.new("Highlight")
						h.Adornee = child
						h.FillColor = Color3.fromRGB(163, 3, 255)
						h.OutlineColor = Color3.fromRGB(255, 255, 255)
						h.Parent = child
						table.insert(highlights2,  h)
					else
						recurse(child)
					end
				end
			end
			recurse(cola)
		end
	end
end

local function createHighlightsForAll()
	clearHighlights2()

	local colas = getAllBloxyColas()
	for _, cola in ipairs(colas) do
		local function recurse(obj)
			for _, child in pairs(obj:GetChildren()) do
				if child:IsA("BasePart") then
					local h = Instance.new("Highlight")
					h.Adornee = child
					h.FillColor = Color3.fromRGB(163, 3, 255)
					h.OutlineColor = Color3.fromRGB(255, 255, 255)
					h.Parent = child
					table.insert(highlights2, h)
				else
					recurse(child)
				end
			end
		end
		recurse(cola)
	end

	createHighlightsForWorkspaceColas()

end

local function toggleESP(state)
	espEnabled1 = state
	if espEnabled1 then
		createHighlightsForAll()
	else
		clearHighlights2()
	end
end

local function createNameTag(model, color)
	if nameTags[model] then return end
	if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") then
		local billboard = Instance.new("BillboardGui")
		billboard.Name = "NameTag"
		billboard.Adornee = model:FindFirstChild("HumanoidRootPart")
		billboard.Size = UDim2.new(0, 100, 0, 30)
		billboard.StudsOffset = Vector3.new(0, 2.5, 0)
		billboard.AlwaysOnTop = true
		billboard.Parent = player:WaitForChild("PlayerGui")

		local textLabel = Instance.new("TextLabel")
		textLabel.BackgroundTransparency = 1
		textLabel.Size = UDim2.new(1, 0, 1, 0)
		textLabel.Font = Enum.Font.SourceSansBold
		textLabel.TextSize = 20
		textLabel.TextColor3 = color
		textLabel.TextStrokeTransparency = 0.4
		textLabel.Text = model.Name
		textLabel.Parent = billboard

		nameTags[model] = billboard
	end
end

local function updateNameTags()
	if not nameHighlightEnabled then return end

	survivorsFolder = survivorsFolder or (workspace.Players and workspace.Players:FindFirstChild("Survivors"))
	killersFolder = killersFolder or (workspace.Players and workspace.Players:FindFirstChild("Killers"))

	if survivorsFolder then
		for _, model in pairs(survivorsFolder:GetChildren()) do
			createNameTag(model, Color3.fromRGB(0, 168, 0)) -- синий для survivors
		end
	end

	if killersFolder then
		for _, model in pairs(killersFolder:GetChildren()) do
			createNameTag(model, Color3.fromRGB(139, 0, 0)) -- темно-красный для killers
		end
	end

	-- Удаляем nameTags для моделей, которых уже нет
	for model, tag in pairs(nameTags) do
		local inSurvivors = survivorsFolder and survivorsFolder:FindFirstChild(model.Name)
		local inKillers = killersFolder and killersFolder:FindFirstChild(model.Name)
		if not inSurvivors and not inKillers then
			tag:Destroy()
			nameTags[model] = nil
		end
	end
end

local function enableNameTags()
	nameHighlightEnabled = true
	clearNameTags()
	updateNameTags()
end

local function disableNameTags()
	nameHighlightEnabled = false
	clearNameTags()
end

local function addHighlight(model, color)
	if highlights[model] then return end -- уже подсвечено
	if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") then
		local highlight = Instance.new("Highlight")
		highlight.Adornee = model
		highlight.FillColor = color
		highlight.FillTransparency = 0.5
		highlight.OutlineColor = color
		highlight.OutlineTransparency = 0
		highlight.Parent = player:WaitForChild("PlayerGui")
		highlights[model] = highlight
	end
end



local function updateHighlights()
	-- Добавляем подсветку для новых моделей выживших
	survivorsFolder = workspace.Players.Survivors
	killersFolder = workspace.Players.Killers
	if survivorsFolder then
		for _, model in pairs(survivorsFolder:GetChildren()) do
			addHighlight(model, Color3.fromRGB(0, 255, 0))
		end
	end

	-- Добавляем подсветку для новых моделей киллеров
	if killersFolder then
		for _, model in pairs(killersFolder:GetChildren()) do
			addHighlight(model, Color3.fromRGB(255, 0, 0))
		end
	end
end

local function enableHighlights()
	highlightEnabled = true
	updateHighlights()
	
end

local function disableHighlights()
	highlightEnabled = false
	clearHighlights()
end

-- Настройка персонажа для движения

local brightness = game.Lighting.Brightness
local clocktime = game.Lighting.ClockTime

local function FB()
	game:GetService("Lighting").Brightness = 1
	game:GetService("Lighting").ClockTime = 14
end
local function UNFB()
	game:GetService("Lighting").Brightness = brightness
	game:GetService("Lighting").ClockTime = clocktime
end

local function setupCharacter(character)
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:WaitForChild("Humanoid")

	runService.RenderStepped:Connect(function(dt)
		if speed > 0 then
			local moveDir = humanoid.MoveDirection
			if moveDir.Magnitude > 0 then
				local inc = moveDir.Unit * speed * dt
				humanoidRootPart.CFrame = humanoidRootPart.CFrame + inc
			end
		end
	end)
end

local noclipEnabled = false

local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

RunService.Heartbeat:Connect(function()
	if noclipEnabled then
		character = player.Character or player.CharacterAdded:Wait()
	end
end)

function noclip()
	if noclipEnabled then
		for _, part in pairs(character:GetChildren()) do
			if part:IsA("BasePart") then
				part.CanCollide = false
			end
		end
	else
		for _, part in pairs(character:GetChildren()) do
			if part:IsA("BasePart") then
				part.CanCollide = true
			end
		end
	end
end

speeds = 1
tpwalking = nil
nowe = false

local speaker = game:GetService("Players").LocalPlayer

local chr = game.Players.LocalPlayer.Character
local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedControlGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 400, 0, 280)
frame.Position = UDim2.new(0.5, -175, 0.5, -90)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.Active = true
frame.Draggable = true
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner.Parent = frame
frame.Transparency = 0.06
local gradient = Instance.new("UIGradient")
gradient.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(115, 0, 255)),   -- начало градиента (красный)
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 80, 232))    -- конец градиента (синий)
}

-- пример изменения наклона градиента
gradient.Rotation = 45 -- угол в градусах

-- можно также менять Transparency (прозрачность) градиента
gradient.Transparency = NumberSequence.new{
	NumberSequenceKeypoint.new(0, 0),   -- непрозрачный в начале
	NumberSequenceKeypoint.new(1, 0.3)  -- полупрозрачный в конце
}

gradient.Parent = frame
gradientforALL = gradient:Clone()
gradientforALL.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),   -- начало градиента (красный)
	ColorSequenceKeypoint.new(1, Color3.fromRGB(134, 134, 134))    -- конец градиента (синий)
}

-- пример изменения наклона градиента
gradientforALL.Rotation = 45 -- угол в градусах

-- можно также менять Transparency (прозрачность) градиента
gradientforALL.Transparency = NumberSequence.new{
	NumberSequenceKeypoint.new(0, 0), 
	NumberSequenceKeypoint.new(1, 0)
}

local label = Instance.new("TextLabel", frame)
label.Text = "Ускорение: 0"
label.Size = UDim2.new(1, 0, 0, 30)
label.BackgroundTransparency = 1
label.TextColor3 = Color3.new(1,1,1)
label.Font = Enum.Font.SourceSansBold
label.TextSize = 22
label.Transparency = 1

local bar = Instance.new("Frame", frame)
bar.Size = UDim2.new(0, 240, 0, 20)
bar.Position = UDim2.new(0, 130, 0, 60)
bar.BackgroundColor3 = Color3.fromRGB(80,80,80)
bar.Transparency = 1

local fill = Instance.new("Frame", bar)
fill.Size = UDim2.new(0, 0, 1, 0)
fill.BackgroundColor3 = Color3.fromRGB(0,170,255)
fill.Transparency = 1

local knob = Instance.new("ImageButton", bar)
knob.Size = UDim2.new(0, 30, 0, 30)
knob.Position = UDim2.new(0, -15, 0, -5)
knob.BackgroundTransparency = 1
knob.ImageTransparency = 1
knob.Image = "rbxassetid://3570695787"
knob.Modal = true
knob.Interactable = false
knob.AutoButtonColor = false

local toggleHighLightLabelMEDKIT = Instance.new("TextLabel", frame)
toggleHighLightLabelMEDKIT.Size = UDim2.new(0, 200, 0, 30)
toggleHighLightLabelMEDKIT.Position = UDim2.new(0, 80, 0, 240)
toggleHighLightLabelMEDKIT.BackgroundTransparency = 1
toggleHighLightLabelMEDKIT.TextColor3 = Color3.new(1,1,1)
toggleHighLightLabelMEDKIT.Font = Enum.Font.SourceSans
toggleHighLightLabelMEDKIT.TextSize = 18
toggleHighLightLabelMEDKIT.Text = "Обводка MEDKIT: ВЫКЛ"

local toggleFullBrightLabel = Instance.new("TextLabel", frame)
toggleFullBrightLabel.Size = UDim2.new(0, 200, 0, 30)
toggleFullBrightLabel.Position = UDim2.new(0, 80, 0, 30)
toggleFullBrightLabel.BackgroundTransparency = 1
toggleFullBrightLabel.TextColor3 = Color3.new(1,1,1)
toggleFullBrightLabel.Font = Enum.Font.SourceSans
toggleFullBrightLabel.TextSize = 18
toggleFullBrightLabel.Text = "FULL BRIGHT: ВЫКЛ"

local toggleFullBrightButton = Instance.new("TextButton", frame)
toggleFullBrightButton.Size = UDim2.new(0, 80, 0, 30)
toggleFullBrightButton.Position = UDim2.new(0, 290, 0, 30)
toggleFullBrightButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleFullBrightButton.TextColor3 = Color3.new(1,1,1)
toggleFullBrightButton.Font = Enum.Font.SourceSansBold
toggleFullBrightButton.TextSize = 18
toggleFullBrightButton.Text = "ВКЛ"
gradientforALL:Clone().Parent = toggleFullBrightButton
local uiCorner1 = Instance.new("UICorner")
uiCorner1.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner1.Parent = toggleFullBrightButton

local toggleNoFogLabel = Instance.new("TextLabel", frame)
toggleNoFogLabel.Size = UDim2.new(0, 200, 0, 30)
toggleNoFogLabel.Position = UDim2.new(0, 80, 0, 65)
toggleNoFogLabel.BackgroundTransparency = 1
toggleNoFogLabel.TextColor3 = Color3.new(1,1,1)
toggleNoFogLabel.Font = Enum.Font.SourceSans
toggleNoFogLabel.TextSize = 18
toggleNoFogLabel.Text = "NO FOG: ВЫКЛ"

local toggleNoFogButton = Instance.new("TextButton", frame)
toggleNoFogButton.Size = UDim2.new(0, 80, 0, 30)
toggleNoFogButton.Position = UDim2.new(0, 290, 0, 65)
toggleNoFogButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleNoFogButton.TextColor3 = Color3.new(1,1,1)
toggleNoFogButton.Font = Enum.Font.SourceSansBold
toggleNoFogButton.TextSize = 18
toggleNoFogButton.Text = "ВКЛ"
gradientforALL:Clone():clone().Parent = toggleNoFogButton
local uiCorner2 = Instance.new("UICorner")
uiCorner2.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner2.Parent = toggleNoFogButton

local toggleButtonMEDKIT = Instance.new("TextButton", frame)
toggleButtonMEDKIT.Size = UDim2.new(0, 80, 0, 30)
toggleButtonMEDKIT.Position = UDim2.new(0, 290, 0, 240)
toggleButtonMEDKIT.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleButtonMEDKIT.TextColor3 = Color3.new(1,1,1)
toggleButtonMEDKIT.Font = Enum.Font.SourceSansBold
toggleButtonMEDKIT.TextSize = 18
toggleButtonMEDKIT.Text = "ВКЛ"
local gradientforALL1 = gradientforALL:Clone():Clone():clone()
local uiCorner3 = Instance.new("UICorner")
uiCorner3.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner3.Parent = toggleButtonMEDKIT
gradientforALL1.Parent = toggleButtonMEDKIT

local toggleHighlightLabel = Instance.new("TextLabel", frame)
toggleHighlightLabel.Size = UDim2.new(0, 200, 0, 30)
toggleHighlightLabel.Position = UDim2.new(0, 80, 0, 100)
toggleHighlightLabel.BackgroundTransparency = 1
toggleHighlightLabel.TextColor3 = Color3.new(1,1,1)
toggleHighlightLabel.Font = Enum.Font.SourceSans
toggleHighlightLabel.TextSize = 18
toggleHighlightLabel.Text = "Обводка игроков: ВЫКЛ"

local toggleHighlightCola = Instance.new("TextLabel", frame)
toggleHighlightCola.Size = UDim2.new(0, 200, 0, 30)
toggleHighlightCola.Position = UDim2.new(0, 80, 0, 205)
toggleHighlightCola.BackgroundTransparency = 1
toggleHighlightCola.TextColor3 = Color3.new(1,1,1)
toggleHighlightCola.Font = Enum.Font.SourceSans
toggleHighlightCola.TextSize = 18
toggleHighlightCola.Text = "Обводка BloxyCola: ВЫКЛ"

local toggleButtonCola = Instance.new("TextButton", frame)
toggleButtonCola.Size = UDim2.new(0, 80, 0, 30)
toggleButtonCola.Position = UDim2.new(0, 290, 0, 205)
toggleButtonCola.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleButtonCola.TextColor3 = Color3.new(1,1,1)
toggleButtonCola.Font = Enum.Font.SourceSansBold
toggleButtonCola.TextSize = 18
toggleButtonCola.Text = "ВКЛ"
gradientforALL1:Clone().Parent = toggleButtonCola
local uiCorner4 = Instance.new("UICorner")
uiCorner4.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner4.Parent = toggleButtonCola

local toggleNoClipButton = Instance.new("TextButton", frame)
toggleNoClipButton.Size = UDim2.new(0, 80, 0, 30)
toggleNoClipButton.Position = UDim2.new(0, 290, 0, 90)
toggleNoClipButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleNoClipButton.TextColor3 = Color3.new(1,1,1)
toggleNoClipButton.Font = Enum.Font.SourceSansBold
toggleNoClipButton.TextSize = 18
toggleNoClipButton.Text = "ВКЛ"
toggleNoClipButton.Interactable = false
toggleNoClipButton.Transparency = 1
local uiCorner5 = Instance.new("UICorner")
uiCorner5.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner5.Parent = toggleNoClipButton
gradientforALL1:Clone():Clone().Parent = toggleNoClipButton

local toggleNoClipLabel = Instance.new("TextLabel", frame)
toggleNoClipLabel.Size = UDim2.new(0, 200, 0, 30)
toggleNoClipLabel.Position = UDim2.new(0, 80, 0, 90)
toggleNoClipLabel.BackgroundTransparency = 1
toggleNoClipLabel.TextColor3 = Color3.new(1,1,1)
toggleNoClipLabel.Font = Enum.Font.SourceSans
toggleNoClipLabel.TextSize = 18
toggleNoClipLabel.Text = "NO CLIP: ВЫКЛ"
toggleNoClipLabel.Transparency = 1


local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0, 80, 0, 30)
toggleButton.Position = UDim2.new(0, 290, 0, 100)
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Text = "ВКЛ"
local uiCorner6 = Instance.new("UICorner")
uiCorner6.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner6.Parent = toggleButton
gradientforALL1:Clone():Clone():Clone().Parent = toggleButton

local toggleNameLabel = Instance.new("TextLabel", frame)
toggleNameLabel.Size = UDim2.new(0, 200, 0, 30)
toggleNameLabel.Position = UDim2.new(0, 80, 0, 135)
toggleNameLabel.BackgroundTransparency = 1
toggleNameLabel.TextColor3 = Color3.new(1,1,1)
toggleNameLabel.Font = Enum.Font.SourceSans
toggleNameLabel.TextSize = 18
toggleNameLabel.Text = "Подсветка ников: ВЫКЛ"

local toggleNameButton = Instance.new("TextButton", frame)
toggleNameButton.Size = UDim2.new(0, 80, 0, 30)
toggleNameButton.Position = UDim2.new(0, 290, 0, 135)
toggleNameButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleNameButton.TextColor3 = Color3.new(1,1,1)
toggleNameButton.Font = Enum.Font.SourceSansBold
toggleNameButton.TextSize = 18
toggleNameButton.Text = "ВКЛ"
local uiCorner7 = Instance.new("UICorner")
uiCorner7.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner7.Parent = toggleNameButton
gradientforALL1:Clone():Clone():Clone():Clone().Parent = toggleNameButton

local toggleGENButton = Instance.new("TextButton", frame)
toggleGENButton.Size = UDim2.new(0, 80, 0, 30)
toggleGENButton.Position = UDim2.new(0, 290, 0, 170)
toggleGENButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleGENButton.TextColor3 = Color3.new(1,1,1)
toggleGENButton.Font = Enum.Font.SourceSansBold
toggleGENButton.TextSize = 18
toggleGENButton.Text = "ВКЛ"
local uiCorner9 = Instance.new("UICorner")
uiCorner9.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner9.Parent = toggleGENButton
gradientforALL1:Clone():Clone():Clone():Clone():Clone():Clone().Parent = toggleGENButton

local toggleHighlightLabelGEN = Instance.new("TextLabel", frame)
toggleHighlightLabelGEN.Size = UDim2.new(0, 200, 0, 30)
toggleHighlightLabelGEN.Position = UDim2.new(0, 80, 0, 170)
toggleHighlightLabelGEN.BackgroundTransparency = 1
toggleHighlightLabelGEN.TextColor3 = Color3.new(1,1,1)
toggleHighlightLabelGEN.Font = Enum.Font.SourceSans
toggleHighlightLabelGEN.TextSize = 18
toggleHighlightLabelGEN.Text = "Генератор ESP: ВЫКЛ"

local sliderLabel = Instance.new("TextLabel", frame)
sliderLabel.Size = UDim2.new(0.80, 0, 0.1, 0)
sliderLabel.Position = UDim2.new(0, 80, 0, 60)
sliderLabel.BackgroundTransparency = 1
sliderLabel.TextColor3 = Color3.new(1, 1, 1)
sliderLabel.Font = Enum.Font.SourceSansBold
sliderLabel.TextSize = 18
sliderLabel.Text = "Интервал: 1 сек"
sliderLabel.Parent = frame
sliderLabel.Transparency = 1

local slider = Instance.new("TextButton", frame)
slider.Size = UDim2.new(0.60, 0, 0.065, 0)
slider.Position = UDim2.new(0, 127, 0, 40)
slider.BackgroundColor3 = Color3.new(0.3, 0.3, 0.3)
slider.Text = ""
slider.Parent = frame
slider.Transparency = 1
slider.Interactable = false

local sliderIndicator = Instance.new("Frame", frame)
sliderIndicator.Size = UDim2.new(0.1, 0, 1, 0)
sliderIndicator.BackgroundColor3 = Color3.new(0, 0.6, 1)
sliderIndicator.Parent = slider
sliderIndicator.Transparency = 1

local toggleAGButton = Instance.new("TextButton", frame)
toggleAGButton.Size = UDim2.new(0, 80, 0, 30)
toggleAGButton.Position = UDim2.new(0, 290, 0, 90)
toggleAGButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleAGButton.TextColor3 = Color3.new(1,1,1)
toggleAGButton.Font = Enum.Font.SourceSansBold
toggleAGButton.TextSize = 18
toggleAGButton.Text = "ВКЛ"
toggleAGButton.Interactable = false
toggleAGButton.Transparency = 1
local uiCorner8 = Instance.new("UICorner")
uiCorner8.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner8.Parent = toggleAGButton
gradientforALL1:Clone():Clone():Clone():Clone():Clone().Parent = toggleAGButton

local gradientforALL2 = gradientforALL1:Clone():Clone():Clone():Clone():Clone():Clone():Clone()
gradientforALL2.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 170, 255)),   -- начало градиента (красный)
	ColorSequenceKeypoint.new(1, Color3.fromRGB(255, 80, 232))    -- конец градиента (синий)
}

-- пример изменения наклона градиента
gradientforALL2.Rotation = 45 -- угол в градусах

-- можно также менять Transparency (прозрачность) градиента
gradientforALL2.Transparency = NumberSequence.new{
	NumberSequenceKeypoint.new(0, 0),   -- непрозрачный в начале
	NumberSequenceKeypoint.new(1, 0.3)  -- полупрозрачный в конце
}

local toggleLabelFLY = Instance.new("TextLabel", frame)
toggleLabelFLY.Size = UDim2.new(0, 200, 0, 30)
toggleLabelFLY.Position = UDim2.new(0, 80, 0, 125)
toggleLabelFLY.BackgroundTransparency = 1
toggleLabelFLY.TextColor3 = Color3.new(1,1,1)
toggleLabelFLY.Font = Enum.Font.SourceSans
toggleLabelFLY.TextSize = 18
toggleLabelFLY.Text = "полет: ВЫКЛ"
toggleLabelFLY.TextTransparency = 1

local toggleflybutton = Instance.new("TextButton", frame)
toggleflybutton.Size = UDim2.new(0, 80, 0, 30)
toggleflybutton.Position = UDim2.new(0, 290, 0, 125)
toggleflybutton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleflybutton.TextColor3 = Color3.new(1,1,1)
toggleflybutton.Font = Enum.Font.SourceSansBold
toggleflybutton.TextSize = 18
toggleflybutton.Text = "ВКЛ"
toggleflybutton.Interactable = false
toggleflybutton.Transparency = 1
local uiCorner123 = Instance.new("UICorner")
uiCorner123.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner123.Parent = toggleflybutton
local grad = Instance.new("UIGradient")
grad.Color = ColorSequence.new{
	ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)),   -- начало градиента (красный)
	ColorSequenceKeypoint.new(1, Color3.fromRGB(134, 134, 134))    -- конец градиента (синий)
}

-- пример изменения наклона градиента
grad.Rotation = 45 -- угол в градусах

-- можно также менять Transparency (прозрачность) градиента
grad.Transparency = NumberSequence.new{
	NumberSequenceKeypoint.new(0, 0), 
	NumberSequenceKeypoint.new(1, 0)
}
grad.Parent = toggleflybutton

local sliderFrame = Instance.new("Frame")
sliderFrame.Name = "SliderFrame"
sliderFrame.Size = UDim2.new(0, 240, 0, 10)
sliderFrame.Position = UDim2.new(0.5, -68, 0.5, 25)
sliderFrame.BackgroundColor3 = Color3.fromRGB(220, 220, 220)
sliderFrame.BorderSizePixel = 2
sliderFrame.Parent = frame
sliderFrame.Transparency = 1

local progressBar = Instance.new("Frame", frame)
progressBar.Name = "ProgressBar"
progressBar.Size = UDim2.new(0, 0, 1, 0)
progressBar.BackgroundColor3 = Color3.fromRGB(100, 200, 255)
progressBar.BorderSizePixel = 0
progressBar.Parent = sliderFrame
progressBar.Transparency = 1

local sliderButton = Instance.new("ImageButton")
sliderButton.Name = "SliderButton"
sliderButton.Size = UDim2.new(0, 20, 1, 0)
sliderButton.Position = UDim2.new(0, 0, 0, 0)
sliderButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderButton.AutoButtonColor = false
sliderButton.Parent = sliderFrame
sliderButton.Transparency = 1
sliderButton.Interactable = false

local valueLabel = Instance.new("TextLabel")
valueLabel.Name = "ValueLabel"
valueLabel.Size = UDim2.new(0, 60, 0, 30)
valueLabel.Position = UDim2.new(0, 230, 0, 125)
valueLabel.BackgroundTransparency = 1
valueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
valueLabel.Font = Enum.Font.SourceSansBold
valueLabel.TextSize = 20
valueLabel.Text = 1
valueLabel.Parent = frame
valueLabel.Transparency = 1

local minValue = 1
local maxValue = 20

local UserInputService = game:GetService("UserInputService")
local sliding = false

local function updateSlider(inputPosX)
	local relativeX = math.clamp(inputPosX - sliderFrame.AbsolutePosition.X, 0, sliderFrame.AbsoluteSize.X)
	local percent = relativeX / sliderFrame.AbsoluteSize.X
	local value = math.floor(minValue + (maxValue - minValue) * percent + 0.5)

	progressBar.Size = UDim2.new(percent, 0, 1, 0)
	sliderButton.Position = UDim2.new(percent, -sliderButton.AbsoluteSize.X/2, 0, 0)
	valueLabel.Text = tostring(value)
	speeds = math.floor(minValue + (maxValue - minValue) * percent + 0.5)
end

sliderButton.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		sliding = true
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if sliding and input.UserInputType == Enum.UserInputType.MouseMovement then
		updateSlider(input.Position.X)
	end
end)

UserInputService.InputEnded:Connect(function(input)
	if sliding and input.UserInputType == Enum.UserInputType.MouseButton1 then
		sliding = false
	end
end)

sliderFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		updateSlider(input.Position.X)
		sliding = true
	end
end)

sliderFrame.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		sliding = false
	end
end)

toggleflybutton.MouseButton1Click:Connect(function()
	if toggleflybutton.Text == "ВКЛ" then
		toggleflybutton.Text = "ВЫКЛ"
		toggleLabelFLY.Text = "полет: ВКЛ"
	else
		toggleflybutton.Text = "ВКЛ"
		toggleLabelFLY.Text = "полет: ВЫКЛ"
	end
end)

toggleflybutton.MouseButton1Click:Connect(function()
	if nowe == true then
		nowe = false
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,true)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,true)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics)
	else 
		nowe = true

		for i = 1, speeds do
			spawn(function()

				local hb = game:GetService("RunService").Heartbeat	


				tpwalking = true
				local chr = game.Players.LocalPlayer.Character
				local hum = chr and chr:FindFirstChildWhichIsA("Humanoid")
				while tpwalking and hb:Wait() and chr and hum and hum.Parent do
					if hum.MoveDirection.Magnitude > 0 then
						chr:TranslateBy(hum.MoveDirection)
					end
				end

			end)
		end
		local Char = game.Players.LocalPlayer.Character
		local Hum = Char:FindFirstChildOfClass("Humanoid") or Char:FindFirstChildOfClass("AnimationController")

		for i,v in next, Hum:GetPlayingAnimationTracks() do
			v:AdjustSpeed(0)
		end
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.PlatformStanding,false)
		speaker.Character.Humanoid:SetStateEnabled(Enum.HumanoidStateType.Swimming,false)
		speaker.Character.Humanoid:ChangeState(Enum.HumanoidStateType.Swimming)
	end

	if game:GetService("Players").LocalPlayer.Character:FindFirstChildOfClass("Humanoid").RigType == Enum.HumanoidRigType.R6 then
		local plr = game.Players.LocalPlayer
		local torso = plr.Character.Torso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", torso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = torso.CFrame
		local bv = Instance.new("BodyVelocity", torso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			game:GetService("RunService").RenderStepped:Wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end
			--	game.Players.LocalPlayer.Character.Animate.Disabled = true
			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		tpwalking = false

	else
		local plr = game.Players.LocalPlayer
		local UpperTorso = plr.Character.UpperTorso
		local flying = true
		local deb = true
		local ctrl = {f = 0, b = 0, l = 0, r = 0}
		local lastctrl = {f = 0, b = 0, l = 0, r = 0}
		local maxspeed = 50
		local speed = 0


		local bg = Instance.new("BodyGyro", UpperTorso)
		bg.P = 9e4
		bg.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		bg.cframe = UpperTorso.CFrame
		local bv = Instance.new("BodyVelocity", UpperTorso)
		bv.velocity = Vector3.new(0,0.1,0)
		bv.maxForce = Vector3.new(9e9, 9e9, 9e9)
		if nowe == true then
			plr.Character.Humanoid.PlatformStand = true
		end
		while nowe == true or game:GetService("Players").LocalPlayer.Character.Humanoid.Health == 0 do
			wait()

			if ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0 then
				speed = speed+.5+(speed/maxspeed)
				if speed > maxspeed then
					speed = maxspeed
				end
			elseif not (ctrl.l + ctrl.r ~= 0 or ctrl.f + ctrl.b ~= 0) and speed ~= 0 then
				speed = speed-1
				if speed < 0 then
					speed = 0
				end
			end
			if (ctrl.l + ctrl.r) ~= 0 or (ctrl.f + ctrl.b) ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (ctrl.f+ctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(ctrl.l+ctrl.r,(ctrl.f+ctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
				lastctrl = {f = ctrl.f, b = ctrl.b, l = ctrl.l, r = ctrl.r}
			elseif (ctrl.l + ctrl.r) == 0 and (ctrl.f + ctrl.b) == 0 and speed ~= 0 then
				bv.velocity = ((game.Workspace.CurrentCamera.CoordinateFrame.lookVector * (lastctrl.f+lastctrl.b)) + ((game.Workspace.CurrentCamera.CoordinateFrame * CFrame.new(lastctrl.l+lastctrl.r,(lastctrl.f+lastctrl.b)*.2,0).p) - game.Workspace.CurrentCamera.CoordinateFrame.p))*speed
			else
				bv.velocity = Vector3.new(0,0,0)
			end

			bg.cframe = game.Workspace.CurrentCamera.CoordinateFrame * CFrame.Angles(-math.rad((ctrl.f+ctrl.b)*50*speed/maxspeed),0,0)
		end
		ctrl = {f = 0, b = 0, l = 0, r = 0}
		lastctrl = {f = 0, b = 0, l = 0, r = 0}
		speed = 0
		bg:Destroy()
		bv:Destroy()
		plr.Character.Humanoid.PlatformStand = false
		tpwalking = false
	end
end)

local togglePage1button = Instance.new("TextButton", frame)
togglePage1button.Size = UDim2.new(0, 80, 0, 30)
togglePage1button.Position = UDim2.new(0, 5, 0, 35)
togglePage1button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
togglePage1button.TextColor3 = Color3.new(1,1,1)
togglePage1button.Font = Enum.Font.SourceSansBold
togglePage1button.TextSize = 18
togglePage1button.Text = "Visuals"
local uiCorner9 = Instance.new("UICorner")
uiCorner9.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner9.Parent = togglePage1button
gradientforALL2.Parent = togglePage1button

local togglePage2button = Instance.new("TextButton", frame)
togglePage2button.Size = UDim2.new(0, 80, 0, 30)
togglePage2button.Position = UDim2.new(0, 5, 0, 75)
togglePage2button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
togglePage2button.TextColor3 = Color3.new(1,1,1)
togglePage2button.Font = Enum.Font.SourceSansBold
togglePage2button.TextSize = 18
togglePage2button.Text = "Misc"
local uiCorner10 = Instance.new("UICorner")
uiCorner10.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner10.Parent = togglePage2button
gradientforALL2:Clone().Parent = togglePage2button

local togglePage3button = Instance.new("TextButton", frame)
togglePage3button.Size = UDim2.new(0, 80, 0, 30)
togglePage3button.Position = UDim2.new(0, 5, 0, 115)
togglePage3button.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
togglePage3button.TextColor3 = Color3.new(1,1,1)
togglePage3button.Font = Enum.Font.SourceSansBold
togglePage3button.TextSize = 18
togglePage3button.Text = "Generator"
local uiCorner11 = Instance.new("UICorner")
uiCorner11.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner11.Parent = togglePage3button
gradientforALL2:Clone():Clone().Parent = togglePage3button

local toggleAGlabel = Instance.new("TextLabel", frame)
toggleAGlabel.Size = UDim2.new(0, 200, 0, 30)
toggleAGlabel.Position = UDim2.new(0, 100, 0, 90)
toggleAGlabel.BackgroundTransparency = 1
toggleAGlabel.TextColor3 = Color3.new(1,1,1)
toggleAGlabel.Font = Enum.Font.SourceSans
toggleAGlabel.TextSize = 18
toggleAGlabel.Text = "АВТО ГЕНЕРАТОР: ВЫКЛ"
toggleAGlabel.Transparency = 1

local toggleclosebutton = Instance.new("TextButton", frame)
toggleclosebutton.Size = UDim2.new(0, 280, 0, 30)
toggleclosebutton.Position = UDim2.new(0, 100, 0, 240)
toggleclosebutton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleclosebutton.TextColor3 = Color3.new(1,1,1)
toggleclosebutton.Font = Enum.Font.SourceSansBold
toggleclosebutton.TextSize = 18
toggleclosebutton.Text = "закрыть скрипт(script unload)"
toggleclosebutton.Transparency = 1
toggleclosebutton.Interactable = false
local uiCorner11 = Instance.new("UICorner")
uiCorner11.CornerRadius = UDim.new(0, 15) -- радиус 15 пикселей
uiCorner11.Parent = toggleclosebutton
gradientforALL2:Clone():Clone():Clone().Parent = toggleclosebutton

local isEnabledGEN = false
local lastFireTime = 0

toggleButton.MouseButton1Click:Connect(function()
	if highlightEnabled then
		disableHighlights()
		toggleHighlightLabel.Text = "Обводка игроков: ВЫКЛ"
		toggleButton.Text = "ВКЛ"
	else
		toggleHighlightLabel.Text = "Обводка игроков: ВКЛ"
		enableHighlights()
		toggleButton.Text = "ВЫКЛ"
	end
end)

local UserInputService = game:GetService("UserInputService")
local dragging1 = false
local interval = 1
local function updateSlider1(inputPosition)
	local relativeX = math.clamp(inputPosition.X - slider.AbsolutePosition.X, 0, slider.AbsoluteSize.X)
	local percent = relativeX / slider.AbsoluteSize.X
	sliderIndicator.Size = UDim2.new(percent, 0, 1, 0)
	interval = math.floor(1 + percent * 9) -- 1..10 секунд
	sliderLabel.Text = "Интервал: " .. interval .. " сек"
end

slider.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging1 = true
		updateSlider1(input.Position)
	end
end)

slider.InputChanged:Connect(function(input)
	if dragging1 and input.UserInputType == Enum.UserInputType.MouseMovement then
		updateSlider1(input.Position)
	end
end)

slider.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging1 = false
	end
end)

local isEnabled = false
local runService = game:GetService("RunService")
local lastFireTime = 0

toggleAGButton.MouseButton1Click:Connect(function()
	
	isEnabled = not isEnabled
	if isEnabled then 
		toggleAGButton.Text = "ВЫКЛ"
		-- Можно добавить логику входа в каждый генератор (если она нужна)
		for _, gen in pairs(generators) do
			local remotes = gen:WaitForChild("Remotes")
			local RF = remotes:WaitForChild("RF")
		end
	else
		toggleAGButton.Text = "ВКЛ"
		for _, gen in pairs(generators) do
			local remotes = gen:WaitForChild("Remotes")
			local RF = remotes:WaitForChild("RF")
		end
	end
end)

togglePage1button.MouseButton1Click:Connect(function()
	toggleHighLightLabelMEDKIT.TextTransparency = 0
	toggleButtonMEDKIT.Transparency = 0
	toggleHighlightLabel.TextTransparency = 0
	toggleButton.Transparency = 0
	toggleHighlightCola.TextTransparency = 0
	toggleButtonCola.Transparency = 0
	toggleNameLabel.TextTransparency = 0
	toggleNameButton.Transparency = 0
	toggleGENButton.Transparency = 0
	toggleHighlightLabelGEN.TextTransparency = 0
	knob.Interactable = false
	label.TextTransparency = 1
	bar.Transparency = 1
	fill.Transparency = 1
	knob.ImageTransparency = 1
	toggleButtonCola.Interactable = true
	toggleButton.Interactable = true
	toggleButtonMEDKIT.Interactable = true
	toggleGENButton.Interactable = true
	toggleNameButton.Interactable = true
	toggleNoFogLabel.TextTransparency = 0
	toggleNoFogButton.Transparency = 0
	toggleNoFogButton.Interactable = true
	toggleFullBrightButton.Transparency = 0
	toggleFullBrightLabel.TextTransparency = 0
	toggleFullBrightButton.Interactable = true
	toggleNoClipButton.Transparency = 1
	toggleNoClipButton.Interactable = false
	toggleNoClipLabel.TextTransparency = 1
	toggleAGButton.Interactable = false
	toggleAGButton.Transparency = 1
	toggleAGlabel.Transparency = 1
	slider.Transparency = 1
	slider.Interactable = false
	sliderLabel.Transparency = 1
	sliderIndicator.Transparency = 1
	toggleAGButton.Interactable = false
	toggleAGButton.Transparency = 1
	toggleclosebutton.Transparency = 1
	toggleclosebutton.Interactable = false
	toggleflybutton.Transparency = 1
	toggleflybutton.Interactable = false
	toggleLabelFLY.TextTransparency = 1
	sliderFrame.Transparency = 1
	progressBar.Transparency = 1
	sliderButton.Transparency = 1
	sliderButton.Interactable = false
	valueLabel.Transparency = 1
end)

togglePage2button.MouseButton1Click:Connect(function()
	toggleButtonMEDKIT.Transparency = 1
	toggleHighLightLabelMEDKIT.Transparency = 1
	toggleHighlightLabel.Transparency = 1
	toggleButton.TextTransparency = 1
	toggleButtonCola.Transparency = 1
	toggleHighlightCola.TextTransparency = 1
	toggleNameLabel.Transparency = 1
	toggleGENButton.Transparency = 1
	toggleButton.Transparency = 1
	toggleNameButton.Transparency = 1
	toggleHighlightLabelGEN.Transparency = 1
	label.TextTransparency = 0
	bar.Transparency = 0
	fill.Transparency = 0
	knob.ImageTransparency = 0
	knob.Interactable = true
	toggleButtonCola.Interactable = false
	toggleButton.Interactable = false
	toggleButtonMEDKIT.Interactable = false
	toggleGENButton.Interactable = false
	toggleNameButton.Interactable = false
	toggleNoFogLabel.Transparency = 1
	toggleNoFogButton.Transparency = 1
	toggleNoFogButton.Interactable = false
	toggleFullBrightButton.Transparency = 1
	toggleFullBrightLabel.Transparency = 1
	toggleFullBrightButton.Interactable = false
	toggleNoClipButton.Transparency = 0
	toggleNoClipButton.Interactable = true
	toggleNoClipLabel.TextTransparency = 0
	toggleAGButton.Interactable = false
	toggleAGButton.Transparency = 1
	toggleAGlabel.Transparency = 1
	slider.Transparency = 1
	slider.Interactable = false
	sliderLabel.Transparency = 1
	sliderIndicator.Transparency = 1
	toggleAGButton.Interactable = false
	toggleAGButton.Transparency = 1
	toggleclosebutton.Transparency = 0
	toggleclosebutton.Interactable = true
	toggleflybutton.Transparency = 0
	toggleflybutton.Interactable = true
	toggleLabelFLY.TextTransparency = 0
	sliderFrame.Transparency = 0
	progressBar.Transparency = 0
	sliderButton.Transparency = 0
	sliderButton.Interactable = true
	valueLabel.TextTransparency = 0
end)

togglePage3button.MouseButton1Click:Connect(function()
	toggleButtonMEDKIT.Transparency = 1
	toggleHighLightLabelMEDKIT.Transparency = 1
	toggleHighlightLabel.Transparency = 1
	toggleButtonCola.Transparency = 1
	toggleHighlightCola.TextTransparency = 1
	toggleNameLabel.Transparency = 1
	toggleGENButton.Transparency = 1
	toggleNameButton.Transparency = 1
	toggleHighlightLabelGEN.Transparency = 1
	toggleAGButton.Interactable = true
	toggleAGButton.Transparency = 0
	toggleAGlabel.TextTransparency = 0
	slider.Transparency = 0
	slider.Interactable = true
	sliderLabel.TextTransparency = 0
	sliderIndicator.Transparency = 0
	toggleAGButton.Interactable = true
	toggleAGButton.Transparency = 0
	toggleButton.Interactable = false
	toggleButton.Transparency = 1
	toggleButton.TextTransparency = 1
	toggleNoFogLabel.Transparency = 1
	toggleNoFogButton.Transparency = 1
	toggleNoFogButton.Interactable = false
	toggleFullBrightButton.Transparency = 1
	toggleFullBrightLabel.Transparency = 1
	toggleFullBrightButton.Interactable = false
	toggleNoClipButton.Transparency = 1
	toggleNoClipButton.Interactable = false
	toggleNoClipLabel.TextTransparency = 1
	knob.Interactable = false
	label.TextTransparency = 1
	bar.Transparency = 1
	fill.Transparency = 1
	knob.ImageTransparency = 1
	toggleclosebutton.Transparency = 1
	toggleclosebutton.Interactable = false
	toggleflybutton.Transparency = 1
	toggleflybutton.Interactable = false
	toggleLabelFLY.TextTransparency = 1
	sliderFrame.Transparency = 1
	progressBar.Transparency = 1
	sliderButton.Transparency = 1
	sliderButton.Interactable = false
	valueLabel.Transparency = 1
end)

toggleButtonCola.MouseButton1Click:Connect(function()
	espEnabled1 = not espEnabled1
	toggleESP(espEnabled1)
	if toggleHighlightCola.Text == "Обводка BloxyCola: ВЫКЛ" then
		toggleButtonCola.Text = "ВЫКЛ"
		toggleHighlightCola.Text = "Обводка BloxyCola: ВКЛ"
	else
		toggleHighlightCola.Text = "Обводка BloxyCola: ВЫКЛ"
		toggleButtonCola.Text = "ВКЛ"
	end
end)

toggleNameButton.MouseButton1Click:Connect(function()
	if nameHighlightEnabled then
		disableNameTags()
		toggleNameLabel.Text = "Подсветка ников: ВЫКЛ"
		toggleNameButton.Text = "ВКЛ"
	else
		enableNameTags()
		toggleNameLabel.Text = "Подсветка ников: ВКЛ"
		toggleNameButton.Text = "ВЫКЛ"
	end
end)

closebuttonRE = nil

toggleclosebutton. MouseButton1Click:Connect(function()
	highlightEnabled = false
	nameHighlightEnabled = false
	espEnabled1 = false
	espEnabled3 = false
	espEnabled = false
	closebuttonRE = true
	clearHighlights2()
	clearNameTags()
	clearHighlights()
	clearHighlights3()
	screenGui:Destroy()
end)

toggleGENButton.MouseButton1Click:Connect(function()
	espEnabled = not espEnabled
	if espEnabled then
		toggleHighlightLabelGEN.Text = "Генератор ESP: ВКЛ"
		toggleGENButton.Text = "ВЫКЛ"
		highlightInstances()
	else
		toggleHighlightLabelGEN.Text = "Генератор ESP: ВЫКЛ"
		toggleGENButton.Text = "ВКЛ"
		clearHighlights1()
	end
end)

toggleButtonMEDKIT.MouseButton1Click:Connect(function()
	espEnabled3 = not espEnabled3
	toggleESP3(espEnabled3)
	if toggleHighLightLabelMEDKIT.Text == "Обводка Medkit: ВКЛ" then
		toggleHighLightLabelMEDKIT.Text = "Обводка Medkit: ВЫКЛ"
	else
		toggleHighLightLabelMEDKIT.Text = "Обводка Medkit: ВКЛ"
	end
	if toggleButtonMEDKIT.Text == "ВЫКЛ" then
		toggleButtonMEDKIT.Text = "ВКЛ"
	else
		toggleButtonMEDKIT.Text = "ВЫКЛ"
	end
end)

local FogEnd = game.Lighting.FogEnd 
local FogStart = game.Lighting.FogStart
local bruh = nil

toggleNoFogButton.MouseButton1Click:Connect(function()
	if toggleNoFogButton.Text == "ВКЛ" then
		toggleNoFogLabel.Text = "NO FOG: ВКЛ"
		bruh = true
		game.Lighting.FogEnd = 100000
		game.Lighting.FogStart = 0
		game.Lighting.GlobalShadows = false
		toggleNoFogButton.Text = "ВЫКЛ"
	else
		toggleNoFogLabel.Text = "NO FOG: ВЫКЛ"
		bruh = false
		game.Lighting.FogEnd = FogEnd
		game.Lighting.FogStart = FogStart
		game.Lighting.GlobalShadows = true
		toggleNoFogButton.Text = "ВКЛ"
	end

end)

toggleNoClipButton.MouseButton1Click:Connect(function()
	noclipEnabled = not noclipEnabled
	noclip()
	if toggleNoClipButton.Text == "ВКЛ" then
		toggleNoClipButton.Text = "ВЫКЛ"
		toggleNoClipLabel.Text = "NO CLIP: ВКЛ"
	else
		toggleNoClipButton.Text = "ВКЛ"
		toggleNoClipLabel.Text = "NO CLIP: ВЫКЛ"
	end
end)

toggleFullBrightButton.MouseButton1Click:Connect(function()
	if toggleFullBrightButton.Text == "ВКЛ" then
		FB()
		toggleFullBrightLabel.Text = "FULL BRIGHT: ВКЛ"
		toggleFullBrightButton.Text = "ВЫКЛ"
	else
		UNFB()
		toggleFullBrightLabel.Text = "FULL BRIGHT ВЫКЛ"
		toggleFullBrightButton.Text = "ВКЛ"
	end

end)

knob.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
	end
end)

userInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local relativeX = math.clamp(input.Position.X - bar.AbsolutePosition.X, 0, bar.AbsoluteSize.X)
		local percent = relativeX / bar.AbsoluteSize.X
		speed = math.floor(percent * 100 + 0.5)
		fill.Size = UDim2.new(percent, 0, 1, 0)
		knob.Position = UDim2.new(percent, -15, 0, -5)
		label.Text = "Ускорение: "..speed
	end
end)

userInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

if player.Character then
	setupCharacter(player.Character)
end

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if input.KeyCode == Enum.KeyCode.Insert then
		if screenGui.Enabled == true then
			screenGui.Enabled = false
		else
			screenGui.Enabled = true
		end
	end
end)

local sigma = false

player.CharacterAdded:Connect(function(char)
	setupCharacter(char)
	highlights = {}
	nameTags = {}
	generators = {}
	sigma = true
end)

local died = false
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

RunService.Heartbeat:Connect(function(deltaTime)
	if bruh then
		game.Lighting.FogEnd = 100000
		game.Lighting.FogStart = 0
		game.Lighting.GlobalShadows = false
	end
	if highlightEnabled then
		updateHighlights()
	end
	if nameHighlightEnabled then
		updateNameTags()
	end
	if espEnabled1 then
		createHighlightsForAll()
	end
	if espEnabled3 then
		createHighlightsForAll3()
	end
	if espEnabled == false then
		clearHighlights1()
	end
	if noclipEnabled then
		noclip()
	end
	if not isEnabled then return end
	local generatorsFolder = workspace.Map.Ingame.Map
	local generators = {}

	for _, gen in pairs(generatorsFolder:GetChildren()) do
		if gen.Name == "Generator" then
			table.insert(generators, gen)
		end
	end
	
	
	lastFireTime = lastFireTime + deltaTime
	if lastFireTime >= interval then
		lastFireTime = 0
		for _, gen in pairs(generators) do
			local remotes = gen:WaitForChild("Remotes")
			local RE = remotes:WaitForChild("RE")
			RE:FireServer()
		end
	end
end)

player.CharacterAdded:Connect(function(char)
	character = char
	humanoid = character:WaitForChild("Humanoid")
	died = false
end)

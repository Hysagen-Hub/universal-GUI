local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local userInputService = game:GetService("UserInputService")
local runService = game:GetService("RunService")
local players = game:GetService("Players")

local speed = 0
local dragging = false
local highlightEnabled = false
local nameHighlightEnabled = false
local highlights = {}
local nameHighlights = {}

local survivorsFolder
local killersFolder

local function clearHighlights()
	for _, highlight in pairs(highlights) do
		if highlight then highlight:Destroy() end
	end
	highlights = {}
end

local function addHighlight(model, color)
	if highlights[model] then return end -- уже подсвечено
	if model:IsA("Model") and model:FindFirstChild("HumanoidRootPart") then
		local highlight = Instance.new("Highlight")
		highlight.Adornee = model
		highlight.FillColor = color
		highlight.FillTransparency = 0.5
		highlight.OutlineColor = color
		highlight.OutlineTransparency = 0
		highlight.Parent = player:WaitForChild("PlayerGui")
		highlights[model] = highlight
	end
end

local function updateHighlights()
	if not highlightEnabled then return end

	-- Обновляем папки, если их ещё нет
	survivorsFolder = survivorsFolder or (workspace.Players and workspace.Players:FindFirstChild("Survivors"))
	killersFolder = killersFolder or (workspace.Players and workspace.Players:FindFirstChild("Killers"))

	-- Добавляем подсветку для новых моделей выживших
	if survivorsFolder then
		for _, model in pairs(survivorsFolder:GetChildren()) do
			addHighlight(model, Color3.fromRGB(0, 170, 255))
		end
	end

	-- Добавляем подсветку для новых моделей киллеров
	if killersFolder then
		for _, model in pairs(killersFolder:GetChildren()) do
			addHighlight(model, Color3.fromRGB(255, 0, 0))
		end
	end

	-- Удаляем подсветку для тех моделей, которых уже нет в папках
	for model, highlight in pairs(highlights) do
		local inSurvivors = survivorsFolder and survivorsFolder:FindFirstChild(model.Name)
		local inKillers = killersFolder and killersFolder:FindFirstChild(model.Name)
		if not inSurvivors and not inKillers then
			highlight:Destroy()
			highlights[model] = nil
		end
	end
end

local function enableHighlights()
	highlightEnabled = true
	clearHighlights()
	updateHighlights()
end

local function disableHighlights()
	highlightEnabled = false
	clearHighlights()
end

-- Настройка персонажа для движения

local function setupCharacter(character)
	local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
	local humanoid = character:WaitForChild("Humanoid")

	runService.RenderStepped:Connect(function(dt)
		if speed > 0 then
			local moveDir = humanoid.MoveDirection
			if moveDir.Magnitude > 0 then
				local inc = moveDir.Unit * speed * dt
				humanoidRootPart.CFrame = humanoidRootPart.CFrame + inc
			end
		end
	end)
end




-- Создание/удаление подсветки ников игроков

local function updateNameHighlights()
	for _, plr in pairs(players:GetPlayers()) do
		if plr ~= player then
			local character = plr.Character
			if character and character:FindFirstChild("Head") then
				if nameHighlightEnabled and not nameHighlights[plr] then
					-- Создаём BillboardGui с TextLabel над головой
					local billboard = Instance.new("BillboardGui")
					billboard.Name = "NameHighlightGui"
					billboard.Adornee = character.Head
					billboard.Size = UDim2.new(0, 150, 0, 40)
					billboard.StudsOffset = Vector3.new(0, 2.5, 0)
					billboard.AlwaysOnTop = true
					billboard.Parent = player.PlayerGui

					local label = Instance.new("TextLabel")
					label.Size = UDim2.new(1, 0, 1, 0)
					label.BackgroundTransparency = 1
					label.Text = plr.Name
					label.TextColor3 = Color3.fromRGB(0, 170, 255)
					label.Font = Enum.Font.SourceSansBold
					label.TextStrokeTransparency = 0
					label.TextStrokeColor3 = Color3.new(0,0,0)
					label.TextScaled = true
					label.Parent = billboard

					nameHighlights[plr] = billboard
				elseif not nameHighlightEnabled and nameHighlights[plr] then
					nameHighlights[plr]:Destroy()
					nameHighlights[plr] = nil
				end
			else
				if nameHighlights[plr] then
					nameHighlights[plr]:Destroy()
					nameHighlights[plr] = nil
				end
			end
		end
	end
end

-- Расширяем GUI

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SpeedControlGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 350, 0, 180)
frame.Position = UDim2.new(0.5, -175, 0.5, -90)
frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
frame.Active = true
frame.Draggable = true

local label = Instance.new("TextLabel", frame)
label.Text = "Ускорение: 0"
label.Size = UDim2.new(1, 0, 0, 30)
label.BackgroundTransparency = 1
label.TextColor3 = Color3.new(1,1,1)
label.Font = Enum.Font.SourceSansBold
label.TextSize = 22

local bar = Instance.new("Frame", frame)
bar.Size = UDim2.new(0, 290, 0, 20)
bar.Position = UDim2.new(0, 30, 0, 60)
bar.BackgroundColor3 = Color3.fromRGB(80,80,80)

local fill = Instance.new("Frame", bar)
fill.Size = UDim2.new(0, 0, 1, 0)
fill.BackgroundColor3 = Color3.fromRGB(0,170,255)

local knob = Instance.new("ImageButton", bar)
knob.Size = UDim2.new(0, 30, 0, 30)
knob.Position = UDim2.new(0, -15, 0, -5)
knob.BackgroundTransparency = 1
knob.Image = "rbxassetid://3570695787"
knob.Modal = true

local toggleHighlightLabel = Instance.new("TextLabel", frame)
toggleHighlightLabel.Size = UDim2.new(0, 200, 0, 30)
toggleHighlightLabel.Position = UDim2.new(0, 30, 0, 95)
toggleHighlightLabel.BackgroundTransparency = 1
toggleHighlightLabel.TextColor3 = Color3.new(1,1,1)
toggleHighlightLabel.Font = Enum.Font.SourceSans
toggleHighlightLabel.TextSize = 18
toggleHighlightLabel.Text = "Обводка игроков: ВЫКЛ"

local toggleButton = Instance.new("TextButton", frame)
toggleButton.Size = UDim2.new(0, 80, 0, 30)
toggleButton.Position = UDim2.new(0, 240, 0, 95)
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleButton.TextColor3 = Color3.new(1,1,1)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 18
toggleButton.Text = "ВКЛ"

local toggleNameLabel = Instance.new("TextLabel", frame)
toggleNameLabel.Size = UDim2.new(0, 200, 0, 30)
toggleNameLabel.Position = UDim2.new(0, 30, 0, 130)
toggleNameLabel.BackgroundTransparency = 1
toggleNameLabel.TextColor3 = Color3.new(1,1,1)
toggleNameLabel.Font = Enum.Font.SourceSans
toggleNameLabel.TextSize = 18
toggleNameLabel.Text = "Подсветка ников: ВЫКЛ"

local toggleNameButton = Instance.new("TextButton", frame)
toggleNameButton.Size = UDim2.new(0, 80, 0, 30)
toggleNameButton.Position = UDim2.new(0, 240, 0, 130)
toggleNameButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
toggleNameButton.TextColor3 = Color3.new(1,1,1)
toggleNameButton.Font = Enum.Font.SourceSansBold
toggleNameButton.TextSize = 18
toggleNameButton.Text = "ВКЛ"

toggleNameButton.MouseButton1Click:Connect(function()
	nameHighlightEnabled = not nameHighlightEnabled
	if nameHighlightEnabled then
		toggleNameLabel.Text = "Подсветка ников: ВКЛ"
		toggleNameButton.Text = "ВЫКЛ"
	else
		toggleNameLabel.Text = "Подсветка ников: ВЫКЛ"
		toggleNameButton.Text = "ВКЛ"
	end
	updateNameHighlights()
end)

toggleButton.MouseButton1Click:Connect(function()
	if highlightEnabled then
		disableHighlights()
		toggleHighlightLabel.Text = "Обводка игроков: ВЫКЛ"
		toggleButton.Text = "ВКЛ"
	else
		toggleHighlightLabel.Text = "Обводка игроков: ВКЛ"
		enableHighlights()
		toggleButton.Text = "ВЫКЛ"
	end
end)

knob.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
	end
end)

userInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		local relativeX = math.clamp(input.Position.X - bar.AbsolutePosition.X, 0, bar.AbsoluteSize.X)
		local percent = relativeX / bar.AbsoluteSize.X
		speed = math.floor(percent * 100 + 0.5)

		fill.Size = UDim2.new(percent, 0, 1, 0)
		knob.Position = UDim2.new(percent, -15, 0, -5)
		label.Text = "Ускорение: "..speed
	end
end)

userInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

if player.Character then
	setupCharacter(player.Character)
end

player.CharacterAdded:Connect(function(char)
	setupCharacter(char)
end)

RunService.Heartbeat:Connect(function()
	if highlightEnabled then
		updateHighlights()
	end
end)

RunService.Heartbeat:Connect(function()
	if nameHighlightEnabled then
		updateNameHighlights()
	end
end)
